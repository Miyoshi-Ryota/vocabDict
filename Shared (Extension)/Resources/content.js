(()=>{console.log("VocabDict content script loaded");let t=null,e=null;async function n(t,e){const d=document.createElement("div");d.className="vocabdict-overlay loading";let a=e.top-200,c=e.left+e.width/2-140;a<20&&(a=e.bottom+20),c<20&&(c=20),c+280>window.innerWidth-20&&(c=window.innerWidth-300),a+=window.scrollY,c+=window.scrollX,d.style.top=`${a}px`,d.style.left=`${c}px`,d.innerHTML=`\n    <div class="vocabdict-overlay-content">\n      <div class="loading-spinner"></div>\n      <div class="loading-text">Looking up "${t}"...</div>\n    </div>\n  `,document.body.appendChild(d);try{const e=await browser.runtime.sendMessage({type:"lookup_word",word:t});e.success?e.data?function(t,e){t.className="vocabdict-overlay";const n=(Array.isArray(e.definitions)?e.definitions:[{partOfSpeech:"",meaning:e.definition}]).map(t=>`\n    <div class="definition-item">\n      ${t.partOfSpeech?`<div class="part-of-speech">${t.partOfSpeech}</div>`:""}\n      <div class="definition-text">${t.meaning||t.definition}</div>\n    </div>\n  `).join("");t.innerHTML=`\n    <div class="vocabdict-overlay-content">\n      <div class="word-title">${e.word}</div>\n      ${e.pronunciation?`<div class="word-pronunciation">${e.pronunciation}</div>`:""}\n      <div class="word-definitions">\n        ${n}\n      </div>\n    </div>\n    <div class="overlay-actions">\n      <button class="add-to-list-button">Add to List</button>\n      <button class="close-button">√ó</button>\n    </div>\n  `;t.querySelector(".add-to-list-button").addEventListener("click",async()=>{await async function(t){try{const e=await browser.runtime.sendMessage({type:"get_lists"});if(e.success&&e.data.length>0){const n=e.data[0].id,o=await browser.runtime.sendMessage({type:"add_to_list",word:t,listId:n,metadata:{difficulty:"medium",context:"Added from webpage"}});o.success?i(`Added "${t}" to vocabulary list`):i(`Failed to add "${t}": ${o.error}`)}else i("No vocabulary lists available")}catch(t){console.error("VocabDict: Error adding word to list",t),i("Failed to add word to list")}}(e.word)})}(d,e.data):e.suggestions&&e.suggestions.length>0?function(t,e,o){t.className="vocabdict-overlay";const i=o.map(t=>`\n    <span class="suggestion-item" data-word="${t}">${t}</span>\n  `).join("");t.innerHTML=`\n    <div class="vocabdict-overlay-content">\n      <div class="error-message">No definition found for "${e}"</div>\n      <div class="suggestions">\n        <div class="suggestions-title">Did you mean?</div>\n        ${i}\n      </div>\n    </div>\n    <div class="overlay-actions">\n      <button class="close-button">Close</button>\n    </div>\n  `,t.querySelectorAll(".suggestion-item").forEach(e=>{e.addEventListener("click",async()=>{const o=e.getAttribute("data-word");t.remove();const i=window.getSelection().getRangeAt(0).getBoundingClientRect();await n(o,i)})})}(d,t,e.suggestions):o(d,`No definition found for "${t}"`):o(d,e.error||"Failed to look up word")}catch(t){console.error("VocabDict: Error looking up word",t),o(d,"Failed to look up word")}!function(t){const e=t.querySelector(".close-button");e&&e.addEventListener("click",()=>{s(t)});const n=e=>{t.contains(e.target)||(s(t),document.removeEventListener("click",n))};document.addEventListener("click",n);const o=e=>{"Escape"===e.key&&(s(t),document.removeEventListener("keydown",o))};document.addEventListener("keydown",o)}(d)}function o(t,e){t.className="vocabdict-overlay",t.innerHTML=`\n    <div class="vocabdict-overlay-content">\n      <div class="error-message">${e}</div>\n    </div>\n    <div class="overlay-actions">\n      <button class="close-button">Close</button>\n    </div>\n  `}function i(t){const e=document.createElement("div");e.style.cssText='\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    background: #34C759;\n    color: white;\n    padding: 12px 16px;\n    border-radius: 8px;\n    font-size: 14px;\n    font-weight: 500;\n    z-index: 2147483647;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;\n  ',e.textContent=t,document.body.appendChild(e),setTimeout(()=>{e.remove()},3e3)}function s(t){t.classList.add("closing"),setTimeout(()=>{t.remove(),window.getSelection().removeAllRanges()},150)}window.__vocabDictListenerAdded||(window.__vocabDictListenerAdded=!0,document.addEventListener("selectionchange",()=>{clearTimeout(e),e=setTimeout(()=>{!function(){const e=window.getSelection(),o=e.toString().trim();if(t&&(t.remove(),t=null),o&&o.length<=50&&o.split(/\s+/).length<=3)try{const i=e.getRangeAt(0).getBoundingClientRect();i.width>0&&i.height>0&&function(e,o){const i=document.createElement("button");i.className="vocabdict-lookup-button",i.textContent="üîç",i.setAttribute("aria-label",`Look up "${e}"`);let s=o.top-44-8,d=o.left+o.width/2-22;s<8&&(s=o.bottom+8),d<8&&(d=8),d+44>window.innerWidth-8&&(d=window.innerWidth-44-8),s+=window.scrollY,d+=window.scrollX,i.style.top=`${s}px`,i.style.left=`${d}px`,i.addEventListener("click",async s=>{s.preventDefault(),s.stopPropagation(),i.remove(),t=null;try{const t=await browser.runtime.sendMessage({type:"get_settings"});"popup"===(t.success&&t.data&&t.data.textSelectionMode||"inline")?await browser.runtime.sendMessage({type:"open_popup_with_word",word:e}):await n(e,o)}catch(t){console.error("VocabDict: Error getting settings, falling back to inline mode",t),await n(e,o)}}),document.body.appendChild(i),t=i}(o,i)}catch(t){console.error("VocabDict: Error handling selection",t)}}()},300)})),window.addEventListener("pagehide",()=>{t&&t.remove()})})();