(()=>{"undefined"==typeof browser&&"undefined"!=typeof chrome&&(window.browser=chrome),document.addEventListener("DOMContentLoaded",function(){e.init(),t.init()});const e={init(){this.loadTheme(),this.setupThemeListeners()},loadTheme(){browser.storage.local.get("settings").then(e=>{const t=(e.settings||{}).theme||"dark";this.applyTheme(t);const s=document.getElementById("theme-select");s&&(s.value=t)})},applyTheme(e){document.documentElement.setAttribute("data-theme",e)},setupThemeListeners(){const e=document.getElementById("theme-select");e&&e.addEventListener("change",async e=>{const t=e.target.value;this.applyTheme(t);const s=(await browser.storage.local.get("settings")).settings||{};s.theme=t,await browser.storage.local.set({settings:s})})}},t={init(){this.setupTabListeners(),this.showTab("search")},setupTabListeners(){document.querySelectorAll(".tab-button").forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.tab;this.showTab(t)})})},showTab(e){switch(document.querySelectorAll(".tab-button").forEach(t=>{const s=t.dataset.tab===e;t.classList.toggle("active",s),t.setAttribute("aria-selected",s)}),document.querySelectorAll(".tab-panel").forEach(t=>{const s=t.id===`${e}-tab`;t.classList.toggle("active",s)}),e){case"search":s.init();break;case"lists":n.init();break;case"learn":i.init();break;case"settings":a.init()}}},s={searchTimeout:null,recentSearches:[],init(){this.setupSearchInput(),this.loadRecentSearches()},setupSearchInput(){const e=document.querySelector(".search-input");e&&(e.addEventListener("input",e=>{clearTimeout(this.searchTimeout);const t=e.target.value.trim();0!==t.length?this.searchTimeout=setTimeout(()=>{this.performSearch(t)},300):this.clearSearchResults()}),e.addEventListener("keydown",e=>{if("Enter"===e.key){clearTimeout(this.searchTimeout);const t=e.target.value.trim();t&&this.performSearch(t)}}))},async performSearch(e){try{const t=await browser.runtime.sendMessage({type:"lookup_word",word:e});t.success?t.data?(this.displaySearchResult(t.data),this.addToRecentSearches(e)):this.displayNoResults(e,t.suggestions):this.displayError(t.error)}catch(e){console.error("Search error:",e),this.displayError("Failed to search. Please try again.")}},displaySearchResult(e){const t=document.querySelector(".search-results");t.innerHTML=`\n      <div class="word-card">\n        <div class="word-header">\n          <div>\n            <span class="word-title">${e.word}</span>\n            <span class="word-pronunciation">${e.pronunciation}</span>\n          </div>\n          <button class="add-to-list-btn" title="Add to list">üìö</button>\n        </div>\n        ${e.definitions.map(e=>`\n          <div class="definition-section">\n            <div class="word-part-of-speech">${e.partOfSpeech}</div>\n            <div class="word-definition">${e.meaning}</div>\n            ${e.examples.length>0?`\n              <div class="word-examples">\n                <h4>Examples:</h4>\n                <ul>\n                  ${e.examples.map(e=>`<li>${e}</li>`).join("")}\n                </ul>\n              </div>\n            `:""}\n          </div>\n        `).join("")}\n        ${e.synonyms.length>0?`\n          <div class="word-synonyms">\n            <strong>Synonyms:</strong> ${e.synonyms.join(", ")}\n          </div>\n        `:""}\n        ${e.antonyms.length>0?`\n          <div class="word-synonyms">\n            <strong>Antonyms:</strong> ${e.antonyms.join(", ")}\n          </div>\n        `:""}\n      </div>\n    `,t.querySelector(".add-to-list-btn").addEventListener("click",()=>this.addToList(e))},displayNoResults(e,t=[]){const s=document.querySelector(".search-results");s.innerHTML=`\n      <div class="no-results">\n        <p>No results found for "<strong>${e}</strong>"</p>\n        ${t.length>0?`\n          <p class="small-text">Did you mean:</p>\n          <ul class="suggestions-list">\n            ${t.map(e=>`\n              <li><a href="#" data-suggestion="${e}">${e}</a></li>\n            `).join("")}\n          </ul>\n        `:""}\n      </div>\n    `,s.querySelectorAll("[data-suggestion]").forEach(e=>{e.addEventListener("click",e=>{e.preventDefault();const t=e.target.dataset.suggestion;document.querySelector(".search-input").value=t,this.performSearch(t)})})},displayError(e){document.querySelector(".search-results").innerHTML=`\n      <div class="error-message">\n        <p>Error: ${e}</p>\n      </div>\n    `},clearSearchResults(){document.querySelector(".search-results").innerHTML=""},async addToList(e){try{const t=(await browser.storage.local.get("vocab_lists")).vocab_lists||[],s=t.find(e=>e.isDefault)||t[0];if(!s)return void r.show("No vocabulary lists found","error");const n=await browser.runtime.sendMessage({type:"add_to_list",word:e.word,listId:s.id});n.success?r.show(`Added "${e.word}" to ${s.name}`,"success"):r.show(n.error||"Failed to add word","error")}catch(e){console.error("Add to list error:",e),r.show("Failed to add word to list","error")}},async loadRecentSearches(){const e=await browser.storage.local.get("recentSearches");this.recentSearches=e.recentSearches||[],this.displayRecentSearches()},displayRecentSearches(){const e=document.querySelector(".recent-searches-list");e&&0!==this.recentSearches.length&&(e.innerHTML=this.recentSearches.slice(0,5).map(e=>`<li data-search="${e}">${e}</li>`).join(""),e.querySelectorAll("li").forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.search;document.querySelector(".search-input").value=t,this.performSearch(t)})}))},async addToRecentSearches(e){this.recentSearches.includes(e)||(this.recentSearches.unshift(e),this.recentSearches=this.recentSearches.slice(0,10),await browser.storage.local.set({recentSearches:this.recentSearches}),this.displayRecentSearches())}},n={currentListId:null,init(){this.loadLists(),this.setupListControls()},async loadLists(){try{const e=await browser.runtime.sendMessage({type:"get_lists"});e.success&&this.displayLists(e.data)}catch(e){console.error("Load lists error:",e)}},displayLists(e){const t=document.querySelector(".lists-container");0!==e.length?(t.innerHTML=e.map(e=>`\n      <div class="list-item" data-list-id="${e.id}">\n        <div class="list-item-header">\n          <span class="list-icon">üìÅ</span>\n          <span class="list-name">${e.name}</span>\n          <span class="list-count">${Object.keys(e.words).length} words</span>\n        </div>\n        <div class="list-updated">Last updated: ${this.formatDate(e.updated||e.created)}</div>\n      </div>\n    `).join(""),t.querySelectorAll(".list-item").forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.listId;this.selectList(t)})})):t.innerHTML='<p class="text-center">No vocabulary lists yet</p>'},selectList(e){document.querySelectorAll(".list-item").forEach(t=>{t.classList.toggle("selected",t.dataset.listId===e)}),this.currentListId=e,this.loadListWords(e)},async loadListWords(e){try{const t=await browser.runtime.sendMessage({type:"get_lists"});if(t.success){const s=t.data.find(t=>t.id===e);s&&this.displayListWords(s)}}catch(e){console.error("Load list words error:",e)}},displayListWords(e){const t=document.querySelector(".words-in-list"),s=Object.values(e.words);0!==s.length?t.innerHTML=`\n      <h3 class="section-title">Words in "${e.name}"</h3>\n      ${s.map(e=>`\n        <div class="word-list-item">\n          <div class="difficulty-indicator difficulty-${e.difficulty||"medium"}"></div>\n          <div class="word-list-text">\n            <div class="word-list-word">${e.word}</div>\n            <div class="word-list-status">\n              ${e.lastReviewed?`Last reviewed: ${this.formatDate(e.lastReviewed)}`:"Not reviewed yet"}\n            </div>\n          </div>\n          <div class="word-actions">\n            <button class="word-action-btn" title="Edit notes">üìù</button>\n          </div>\n        </div>\n      `).join("")}\n    `:t.innerHTML='<p class="text-center">No words in this list</p>'},setupListControls(){const e=document.getElementById("new-list-button");e&&e.addEventListener("click",()=>this.showNewListDialog()),document.getElementById("new-list-dialog");const t=document.getElementById("cancel-new-list"),s=document.getElementById("confirm-new-list"),n=document.getElementById("new-list-name");t&&t.addEventListener("click",()=>this.hideNewListDialog()),s&&s.addEventListener("click",()=>this.createNewList()),n&&n.addEventListener("keydown",e=>{"Enter"===e.key?this.createNewList():"Escape"===e.key&&this.hideNewListDialog()})},showNewListDialog(){const e=document.getElementById("new-list-dialog"),t=document.getElementById("new-list-name");e&&(e.style.display="flex",t&&(t.value="",t.focus()))},hideNewListDialog(){const e=document.getElementById("new-list-dialog");e&&(e.style.display="none")},async createNewList(){const e=document.getElementById("new-list-name"),t=e?e.value.trim():"";if(t)try{const e=await browser.runtime.sendMessage({type:"create_list",name:t});e.success?(r.show(`Created list "${t}"`,"success"),this.hideNewListDialog(),this.loadLists()):r.show(e.error||"Failed to create list","error")}catch(e){console.error("Create list error:",e),r.show("Failed to create list","error")}else r.show("Please enter a list name","warning")},formatDate(e){const t=new Date(e),s=new Date,n=Math.abs(s-t),i=Math.floor(n/864e5);return 0===i?"today":1===i?"yesterday":i<7?`${i} days ago`:t.toLocaleDateString()}},i={init(){console.log("Learn tab initialized")}},a={init(){this.loadSettings(),this.setupSettingsListeners()},async loadSettings(){const e=(await browser.storage.local.get("settings")).settings||{theme:"dark",autoAddLookups:!0,dailyReviewLimit:30},t=document.getElementById("auto-add-toggle");t&&(t.checked=e.autoAddLookups);const s=document.getElementById("review-limit");s&&(s.value=e.dailyReviewLimit)},setupSettingsListeners(){const e=document.getElementById("auto-add-toggle");e&&e.addEventListener("change",e=>{this.updateSetting("autoAddLookups",e.target.checked)});const t=document.getElementById("review-limit");t&&t.addEventListener("change",e=>{this.updateSetting("dailyReviewLimit",parseInt(e.target.value))})},async updateSetting(e,t){const s=(await browser.storage.local.get("settings")).settings||{};s[e]=t,await browser.storage.local.set({settings:s})}},r={show(e,t="info"){const s=document.querySelector(".toast-container"),n=document.createElement("div");n.className=`toast ${t}`,n.innerHTML=`\n      <span class="toast-icon">${{info:"‚ÑπÔ∏è",success:"‚úÖ",warning:"‚ö†Ô∏è",error:"‚ùå"}[t]}</span>\n      <span class="toast-message">${e}</span>\n    `,s.appendChild(n),setTimeout(()=>{n.style.opacity="0",setTimeout(()=>n.remove(),300)},3e3)}}})();